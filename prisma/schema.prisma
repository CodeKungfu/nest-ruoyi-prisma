generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model gen_table {
  table_id          BigInt    @id @default(autoincrement())
  table_name        String?   @default("") @db.VarChar(200)
  table_comment     String?   @default("") @db.VarChar(500)
  sub_table_name    String?   @db.VarChar(64)
  sub_table_fk_name String?   @db.VarChar(64)
  class_name        String?   @default("") @db.VarChar(100)
  tpl_category      String?   @default("crud") @db.VarChar(200)
  package_name      String?   @db.VarChar(100)
  module_name       String?   @db.VarChar(30)
  business_name     String?   @db.VarChar(30)
  function_name     String?   @db.VarChar(50)
  function_author   String?   @db.VarChar(50)
  gen_type          String?   @default("0") @db.Char(1)
  gen_path          String?   @default("/") @db.VarChar(200)
  options           String?   @db.VarChar(1000)
  create_by         String?   @default("") @db.VarChar(64)
  create_time       DateTime? @db.DateTime(0)
  update_by         String?   @default("") @db.VarChar(64)
  update_time       DateTime? @db.DateTime(0)
  remark            String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model gen_table_column {
  column_id      BigInt    @id @default(autoincrement())
  table_id       BigInt?
  column_name    String?   @db.VarChar(200)
  column_comment String?   @db.VarChar(500)
  column_type    String?   @db.VarChar(100)
  java_type      String?   @db.VarChar(500)
  java_field     String?   @db.VarChar(200)
  is_pk          String?   @db.Char(1)
  is_increment   String?   @db.Char(1)
  is_required    String?   @db.Char(1)
  is_insert      String?   @db.Char(1)
  is_edit        String?   @db.Char(1)
  is_list        String?   @db.Char(1)
  is_query       String?   @db.Char(1)
  query_type     String?   @default("EQ") @db.VarChar(200)
  html_type      String?   @db.VarChar(200)
  dict_type      String?   @default("") @db.VarChar(200)
  sort           Int?
  create_by      String?   @default("") @db.VarChar(64)
  create_time    DateTime? @db.DateTime(0)
  update_by      String?   @default("") @db.VarChar(64)
  update_time    DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_config {
  configId    Int       @id @default(autoincrement()) @map("config_id")
  configName  String?   @default("") @db.VarChar(100) @map("config_name")
  configKey   String?   @default("") @db.VarChar(100) @map("config_key")
  configValue String?   @default("") @db.VarChar(500) @map("config_value")
  configType  String?   @default("N") @db.Char(1) @map("config_type")
  createBy    String?   @default("") @db.VarChar(64) @map("create_by")
  createTime  DateTime? @db.DateTime(0) @map("create_time")
  updateBy    String?   @default("") @db.VarChar(64) @map("update_by")
  updateTime  DateTime? @db.DateTime(0) @map("update_time")
  remark       String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_dept {
  dept_id     BigInt    @id @default(autoincrement())
  parent_id   BigInt?   @default(0)
  ancestors   String?   @default("") @db.VarChar(50)
  dept_name   String?   @default("") @db.VarChar(30)
  order_num   Int?      @default(0)
  leader      String?   @db.VarChar(20)
  phone       String?   @db.VarChar(11)
  email       String?   @db.VarChar(50)
  status      String?   @default("0") @db.Char(1)
  del_flag    String?   @default("0") @db.Char(1)
  create_by   String?   @default("") @db.VarChar(64)
  create_time DateTime? @db.DateTime(0)
  update_by   String?   @default("") @db.VarChar(64)
  update_time DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_dict_data {
  dictCode   BigInt    @id @default(autoincrement()) @map("dict_code")
  dictSort   Int?      @default(0) @map("dict_sort")
  dictLabel  String?   @default("") @db.VarChar(100) @map("dict_label")
  dictValue  String?   @default("") @db.VarChar(100) @map("dict_value")
  dictType   String?   @default("") @db.VarChar(100) @map("dict_type")
  cssClass   String?   @db.VarChar(100) @map("css_class")
  listClass  String?   @db.VarChar(100) @map("list_class")
  isDefault  String?   @default("N") @db.Char(1) @map("is_default")
  status      String?   @default("0") @db.Char(1)
  createBy   String?   @default("") @db.VarChar(64) @map("create_by")
  createTime DateTime? @db.DateTime(0) @map("create_time")
  updateBy   String?   @default("") @db.VarChar(64) @map("update_by")
  updateTime DateTime? @db.DateTime(0) @map("update_time")
  remark      String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_dict_type {
  dictId     BigInt    @id @default(autoincrement())  @map("dict_id")
  dictName   String?   @default("") @db.VarChar(100) @map("dict_name")
  dictType   String?   @unique(map: "dict_type") @default("") @db.VarChar(100) @map("dict_type")
  status      String?   @default("0") @db.Char(1)
  createBy   String?   @default("") @db.VarChar(64) @map("create_by")
  createTime DateTime? @db.DateTime(0) @map("create_time")
  updateBy   String?   @default("") @db.VarChar(64) @map("update_by")
  updateTime DateTime? @db.DateTime(0) @map("update_time")
  remark      String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_job {
  job_id          BigInt    @default(autoincrement())
  job_name        String    @default("") @db.VarChar(64)
  job_group       String    @default("DEFAULT") @db.VarChar(64)
  invoke_target   String    @db.VarChar(500)
  cron_expression String?   @default("") @db.VarChar(255)
  misfire_policy  String?   @default("3") @db.VarChar(20)
  concurrent      String?   @default("1") @db.Char(1)
  status          String?   @default("0") @db.Char(1)
  create_by       String?   @default("") @db.VarChar(64)
  create_time     DateTime? @db.DateTime(0)
  update_by       String?   @default("") @db.VarChar(64)
  update_time     DateTime? @db.DateTime(0)
  remark          String?   @default("") @db.VarChar(500)

  @@id([job_id, job_name, job_group])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_job_log {
  jobLogId     BigInt    @id @default(autoincrement()) @map("job_log_id")
  jobName       String    @db.VarChar(64) @map("job_name")
  jobGroup      String    @db.VarChar(64) @map("job_group")
  invokeTarget  String    @db.VarChar(500) @map("invoke_target")
  jobMessage    String?   @db.VarChar(500) @map("job_message")
  status         String?   @default("0") @db.Char(1)
  exceptionInfo String?   @default("") @db.VarChar(2000) @map("exception_info")
  createTime    DateTime? @db.DateTime(0) @map("create_time")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_logininfor {
  infoId        BigInt    @id @default(autoincrement()) @map("info_id")
  loginName     String?   @default("") @db.VarChar(50) @map("login_name")
  ipaddr         String?   @default("") @db.VarChar(128)
  loginLocation String?   @default("") @db.VarChar(255) @map("login_location")
  browser        String?   @default("") @db.VarChar(50)
  os             String?   @default("") @db.VarChar(50)
  status         String?   @default("0") @db.Char(1)
  msg            String?   @default("") @db.VarChar(255)
  loginTime     DateTime? @db.DateTime(0) @map("login_time")

  @@index([loginTime], map: "idx_sys_logininfor_lt")
  @@index([status], map: "idx_sys_logininfor_s")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_menu {
  menu_id     BigInt    @id @default(autoincrement())
  menu_name   String    @db.VarChar(50)
  parent_id   BigInt?   @default(0)
  order_num   Int?      @default(0)
  url         String?   @default("#") @db.VarChar(200)
  target      String?   @default("") @db.VarChar(20)
  menu_type   String?   @default("") @db.Char(1)
  visible     String?   @default("0") @db.Char(1)
  is_refresh  String?   @default("1") @db.Char(1)
  perms       String?   @db.VarChar(100)
  icon        String?   @default("#") @db.VarChar(100)
  create_by   String?   @default("") @db.VarChar(64)
  create_time DateTime? @db.DateTime(0)
  update_by   String?   @default("") @db.VarChar(64)
  update_time DateTime? @db.DateTime(0)
  remark      String?   @default("") @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_notice {
  noticeId      Int       @id @default(autoincrement()) @map("notice_id")
  noticeTitle   String    @db.VarChar(50) @map("notice_title")
  noticeType    String    @db.Char(1) @map("notice_type")
  noticeContent String?   @db.VarChar(2000) @map("notice_content")
  status         String?   @default("0") @db.Char(1)
  createBy      String?   @default("") @db.VarChar(64) @map("create_by")
  createTime    DateTime? @db.DateTime(0) @map("create_time")
  updateBy      String?   @default("") @db.VarChar(64) @map("update_by")
  updateTime    DateTime? @db.DateTime(0) @map("update_time")
  remark         String?   @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_oper_log {
  operId        BigInt    @id @default(autoincrement()) @map("oper_id")
  title          String?   @default("") @db.VarChar(50)
  businessType  Int?      @default(0) @map("business_type")
  method         String?   @default("") @db.VarChar(100)
  requestMethod String?   @default("") @db.VarChar(10) @map("request_method")
  operatorType  Int?      @default(0) @map("operator_type")
  operName      String?   @default("") @db.VarChar(50) @map("oper_name")
  deptName      String?   @default("") @db.VarChar(50) @map("dept_name")
  operUrl       String?   @default("") @db.VarChar(255) @map("oper_url")
  operIp        String?   @default("") @db.VarChar(128) @map("oper_ip")
  operLocation  String?   @default("") @db.VarChar(255) @map("oper_location")
  operParam     String?   @default("") @db.VarChar(2000) @map("oper_param")
  jsonResult    String?   @default("") @db.VarChar(2000) @map("json_result")
  status         Int?      @default(0)
  errorMsg      String?   @default("") @db.VarChar(2000) @map("error_msg")
  operTime      DateTime? @db.DateTime(0) @map("oper_time")
  costTime      BigInt?   @default(0) @map("cost_time")

  @@index([businessType], map: "idx_sys_oper_log_bt")
  @@index([operTime], map: "idx_sys_oper_log_ot")
  @@index([status], map: "idx_sys_oper_log_s")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_post {
  postId     BigInt    @id @default(autoincrement()) @map("post_id")
  postCode   String    @db.VarChar(64) @map("post_code")
  postName   String    @db.VarChar(50) @map("post_name")
  postSort   Int @map("post_sort")
  status      String    @db.Char(1)
  createBy   String?   @default("") @db.VarChar(64) @map("create_by")
  createTime DateTime? @db.DateTime(0) @map("create_time")
  updateBy   String?   @default("") @db.VarChar(64) @map("update_by")
  updateTime DateTime? @db.DateTime(0) @map("update_time")
  remark      String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_role {
  role_id     BigInt    @id @default(autoincrement())
  role_name   String    @db.VarChar(30)
  role_key    String    @db.VarChar(100)
  role_sort   Int
  data_scope  String?   @default("1") @db.Char(1)
  status      String    @db.Char(1)
  del_flag    String?   @default("0") @db.Char(1)
  create_by   String?   @default("") @db.VarChar(64)
  create_time DateTime? @db.DateTime(0)
  update_by   String?   @default("") @db.VarChar(64)
  update_time DateTime? @db.DateTime(0)
  remark      String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_role_dept {
  role_id BigInt
  dept_id BigInt

  @@id([role_id, dept_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_role_menu {
  role_id BigInt
  menu_id BigInt

  @@id([role_id, menu_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user {
  user_id         BigInt    @id @default(autoincrement())
  dept_id         BigInt?
  login_name      String    @db.VarChar(30)
  user_name       String?   @default("") @db.VarChar(30)
  user_type       String?   @default("00") @db.VarChar(2)
  email           String?   @default("") @db.VarChar(50)
  phonenumber     String?   @default("") @db.VarChar(11)
  sex             String?   @default("0") @db.Char(1)
  avatar          String?   @default("") @db.VarChar(100)
  password        String?   @default("") @db.VarChar(50)
  salt            String?   @default("") @db.VarChar(20)
  status          String?   @default("0") @db.Char(1)
  del_flag        String?   @default("0") @db.Char(1)
  login_ip        String?   @default("") @db.VarChar(128)
  login_date      DateTime? @db.DateTime(0)
  pwd_update_date DateTime? @db.DateTime(0)
  create_by       String?   @default("") @db.VarChar(64)
  create_time     DateTime? @db.DateTime(0)
  update_by       String?   @default("") @db.VarChar(64)
  update_time     DateTime? @db.DateTime(0)
  remark          String?   @db.VarChar(500)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user_online {
  sessionId        String    @id @default("") @db.VarChar(50)
  loginName       String?   @default("") @db.VarChar(50) @map("login_name")
  deptName        String?   @default("") @db.VarChar(50) @map("dept_name")
  ipaddr           String?   @default("") @db.VarChar(128)
  loginLocation   String?   @default("") @db.VarChar(255) @map("login_location")
  browser          String?   @default("") @db.VarChar(50)
  os               String?   @default("") @db.VarChar(50)
  status           String?   @default("") @db.VarChar(10)
  startTimestamp  DateTime? @db.DateTime(0) @map("start_timestamp")
  lastAccessTime DateTime? @db.DateTime(0) @map("last_access_time")
  expireTime      Int?      @default(0) @map("expire_time")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user_post {
  user_id BigInt
  post_id BigInt

  @@id([user_id, post_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sys_user_role {
  user_id BigInt
  role_id BigInt

  @@id([user_id, role_id])
}
